<?xml version="1.0" encoding="UTF-8"?>

<project name="simplerisk-addons" default="dist">

    <property name="builddir" value="./build/" override="true" />
    <property name="appdir" value="./build/app" override="true" />
    <property name="srnet-dir" value="./build/srnet" override="true" />

    <property name="version" value="20220909-001" override="true" />
    <property name="srnet-version" value="0.13.1" override="true" />

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare">
        <input propertyname="simpleRiskInstallation" defaultValue="../../www/simplerisk/"> Enter Simple Risk Installation dir:</input>
        <echo msg="Making directory ${simpleRiskInstallation}/extras" />
        <mkdir dir="${simpleRiskInstallation}/extras" />
        <echo msg="Making directory ${simpleRiskInstallation}/extras/authentication" />
        <mkdir dir="${simpleRiskInstallation}/extras/authentication" />
    </target>

    <!-- ============================================  -->
    <!-- Target: update                                 -->
    <!-- ============================================  -->
    <target name="update">
        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/authentication"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>
        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/api"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>
    </target>

    <!-- ============================================  -->
    <!-- Target: prepare-build                            -->
    <!-- ============================================  -->
    <target name="prepare-build">

        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/api"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <composer command="update" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/api"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/authentication"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <composer command="update" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/authentication"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <composer command="install" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/notification"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <composer command="update" composer="/usr/local/bin/composer">
            <arg value="--working-dir=./src/extras/notification"/>
            <arg value="--no-dev"/>
            <arg value="--no-interaction"/>
        </composer>

        <delete dir="${builddir}" />
        <mkdir dir="${builddir}" />

        <mkdir dir="${srnet-dir}" />

        <mkdir dir="${appdir}" />
        <mkdir dir="${appdir}/simplerisk" />
        <echo msg="Making directory ${appdir}/simplerisk/extras" />
        <mkdir dir="${appdir}/simplerisk/extras" />
        <echo msg="Making directory ${appdir}/simplerisk/extras/authentication" />
        <mkdir dir="${appdir}/simplerisk/extras/authentication" />
        <echo msg="Making directory ${appdir}/simplerisk/extras/api" />
        <mkdir dir="${appdir}/simplerisk/extras/api" />
        <echo msg="Making directory ${appdir}/simplerisk/extras/notification" />
        <mkdir dir="${appdir}/simplerisk/extras/notification" />
    </target>

    <property name="dblanguage" value="en" />
    <property name="release" value="dev" />


    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="prepare-build">
        <input propertyname="dblanguage" defaultValue="en"> Enter Simple Risk db language (en|bp):</input>
        <input propertyname="release" defaultValue="dev"> Enter the release name (dev):</input>

       
        <httpget url="https://github.com/ffquintella/simplerisk/archive/refs/tags/${version}.tar.gz" 
            dir="${appdir}" followRedirects="true" />
        <untar file="${appdir}/${version}.tar.gz" todir="${appdir}"/>
        <delete file="${appdir}/${version}.tar.gz" />
        <move file="${appdir}/simplerisk-${version}/simplerisk" todir="${appdir}" includeemptydirs="true"/>
        <delete dir="${appdir}/simplerisk-${version}" />

        <copy todir="${appdir}/simplerisk/extras/authentication" overwrite="true" >
            <fileset dir="./src/extras/authentication">
                <include name="**/*" />
            </fileset>
        </copy>

        <copy todir="${appdir}/simplerisk/extras/api" overwrite="true" >
            <fileset dir="./src/extras/api">
                <include name="**/*" />
            </fileset>
        </copy>

        <copy todir="${appdir}/simplerisk/extras/notification" overwrite="true" >
            <fileset dir="./src/extras/notification">
                <include name="**/*" />
            </fileset>
        </copy>

        <if>
            <equals arg1="${release}" arg2="dev" />
            <then>
                <echo message="Coping dev scripts" />
                <copy todir="${appdir}/simplerisk/extras/dev" overwrite="true" >
                    <fileset dir="./scripts/dev">
                        <include name="**/*" />
                    </fileset>
                </copy>
            </then>
            <else>
            </else>
        </if>

        <copy file="./src/extras/authentication/settings-example.php" tofile="${appdir}/simplerisk/extras/authentication/settings.php" overwrite="true" />

        <copy todir="${builddir}/puppet" overwrite="true" >
            <fileset dir="scripts/puppet">
                <include name="**/*" />
            </fileset>
        </copy>

        <copy todir="${builddir}" file="configs/Dockerfile" /> 

        <!-- SRNET block-->
        <property name="srnet-guiclient-lin-file" value="SRNET-GUIClient-lin-x64.zip" override="true" />
        <httpget url="https://dl.cloudsmith.io/public/uox/srnet/raw/versions/${srnet-version}/${srnet-guiclient-lin-file}" 
            dir="${srnet-dir}" followRedirects="true" />

        <property name="srnet-guiclient-win-file" value="SRNET-GUIClient-win-x64.zip" override="true" />
        <httpget url="https://dl.cloudsmith.io/public/uox/srnet/raw/versions/${srnet-version}/${srnet-guiclient-win-file}" 
            dir="${srnet-dir}" followRedirects="true" />

        <property name="srnet-server-file" value="SRNET-Server-lin-x64.zip" override="true" />
        <httpget url="https://dl.cloudsmith.io/public/uox/srnet/raw/versions/${srnet-version}/${srnet-server-file}" 
            dir="${srnet-dir}" followRedirects="true" />

        <property name="srnet-consoleclient-file" value="SRNET-ConsoleClient-lin-x64.zip" override="true" />
        <httpget url="https://dl.cloudsmith.io/public/uox/srnet/raw/versions/${srnet-version}/${srnet-consoleclient-file}" 
            dir="${srnet-dir}" followRedirects="true" />

        <property name="srnet-guiclient-osx-file" value="SRNET-GUIClient-osx-x64.zip" override="true" />
        <httpget url="https://dl.cloudsmith.io/public/uox/srnet/raw/versions/${srnet-version}/${srnet-guiclient-osx-file}" 
            dir="${srnet-dir}" followRedirects="true" />


        <mkdir dir="${builddir}/srnet-db" />
        <copy todir="${builddir}/srnet-db" overwrite="true" >
            <fileset dir="src/net-extras/DAL/Scripts/DB">
                <include name="**/*" />
            </fileset>
        </copy>

        <!-- UNZIPING -->
        <property name="srnet-guiclient-lin-dir" value="${srnet-dir}/SRNET-GUIClient-lin" override="true" />
        <unzip file="${srnet-dir}/${srnet-guiclient-lin-file}" todir="${srnet-guiclient-lin-dir}/" />
        <delete file="${srnet-dir}/${srnet-guiclient-lin-file}" />

        <property name="srnet-guiclient-win-dir" value="${srnet-dir}/SRNET-GUIClient-win" override="true" />
        <unzip file="${srnet-dir}/${srnet-guiclient-win-file}" todir="${srnet-guiclient-win-dir}/" />
        <delete file="${srnet-dir}/${srnet-guiclient-win-file}" />

        <property name="srnet-guiclient-osx-dir" value="${srnet-dir}/SRNET-GUIClient-osx" override="true" />
        <unzip file="${srnet-dir}/${srnet-guiclient-osx-file}" todir="${srnet-guiclient-osx-dir}/" />
        <delete file="${srnet-dir}/${srnet-guiclient-osx-file}" />

        <property name="srnet-server-dir" value="${srnet-dir}/SRNET-Server" override="true" />
        <unzip file="${srnet-dir}/${srnet-server-file}" todir="${srnet-server-dir}/" />
        <delete file="${srnet-dir}/${srnet-server-file}" />

        <property name="srnet-consoleclient-dir" value="${srnet-dir}/SRNET-ConsoleClient" override="true" />
        <unzip file="${srnet-dir}/${srnet-consoleclient-file}" todir="${srnet-consoleclient-dir}/" />
        <delete file="${srnet-dir}/${srnet-consoleclient-file}" />


        <copy todir="${builddir}/common">
            <fileset dir="configs/common/">
                <include name="*.conf" />
                <include name="*.sh" />
                <include name="envvars" />
            </fileset>
        </copy>
        <copy todir="${builddir}" file="configs/sr-apache-site.conf" /> 
        <copy todir="${builddir}" file="scripts/docker/build.sh" /> 
        <copy todir="${builddir}" file="scripts/docker/docker-test.sh" /> 
        <copy todir="${builddir}" file="scripts/dbmgmt/restore_db.sh" /> 
        <copy tofile="${builddir}/simplerisk.sql" file="scripts/db/simplerisk-${version}-${dblanguage}.sql" /> 
    </target>

    <!-- ============================================  -->
    <!-- Target: create-docker-image                   -->
    <!-- ============================================  -->
    <target name="create-docker-image" depends="build">
        <!-- build docker image -->
        <exec executable="docker" dir="${builddir}" passthru="true">
            <arg value="build" />
            <arg line="-t ffquintella/simplerisk-addons:${version}-${dblanguage}-${release} ."/>
        </exec>
    </target>


    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       -->
    <!-- ============================================  -->
    <target name="dist" depends="update">
        <input propertyname="simpleRiskInstallation" defaultValue="../../www/simplerisk/"> Enter Simple Risk Installation dir:</input>
        <echo>Installing addons to: ${simpleRiskInstallation}</echo>
        <echo msg="Coping files..." />
        <copy todir="${simpleRiskInstallation}/extras/authentication"
            overwrite="true" includeemptydirs="true">
            <fileset dir="./src/extras/authentication">
                <include name="**/*" />
            </fileset>
        </copy>
        <copy todir="${simpleRiskInstallation}/extras/api"
            overwrite="true" includeemptydirs="true">
            <fileset dir="./src/extras/api">
                <include name="**/*" />
            </fileset>
        </copy>
        <copy todir="${simpleRiskInstallation}/extras/notification"
            overwrite="true" includeemptydirs="true">
            <fileset dir="./src/extras/notification">
                <include name="**/*" />
            </fileset>
        </copy>
        <if>
            <equals arg1="${release}" arg2="dev" />
            <then>
                <echo message="Coping dev scripts" />
                <copy todir="${simpleRiskInstallation}/extras/dev">
                    <fileset dir="./scripts/dev">
                        <include name="**/*" />
                    </fileset>
                </copy>
            </then>
            <else>
            </else>
        </if>
    </target>
</project>